/// Mixin para determinar el modelo de Layout.
/// @group   Layout
/// @require {boolean} $Display
/// @param   {boolean} $Display - Determina si un elemento sera un flex container o un grid container Acepta 2 valores [flex | grid]
///
/// @example scss
///
/// .container{
///     @include Layout(flex);
/// }
///
/// @example css
///
/// .container{
///     display: -ms-flexbox;
///     display: flex;
///     -ms-flex-wrap: wrap;
///     flex-wrap: wrap;
/// }



@mixin ag-Layout($Display){
    @if $Display == Flex{
        display     : flex;
        @include ag-Wrap(w);
    }@else if $Display == Grid{
        display     : grid;
    }@else{
        @warn "Error valor no permitido";
    }
}

@mixin ag-Layout-css($Display){
    .#{$nameSpace}-Layout-#{$Display}{
        @include ag-Layout($Display);
    }
}

/// Mixin para la creacion de un ag-container.
/// @group   Layout
/// @require {boolean} $Display
/// @param   {boolean} $Display - Determina si un elemento sera un flex container o un grid container Acepta 2 valores [flex | grid]
///
/// @example scss
///
/// .container{
///     @include container(flex);
/// }
///
/// @example css
///
/// .container{
///     max-width: 1200px;
///     margin-left: auto;
///     margin-right: auto;
///     width: 100%;
///     display: -ms-flexbox;
///     display: flex;
///     -ms-flex-wrap: wrap;
///     flex-wrap: wrap;
/// }
///


@mixin ag-Container($Display){
    max-width       : $Max-Width;
    margin-left     : auto      ;
    margin-right    : auto      ;
    width           : 100%      ;
    @include ag-Layout($Display)   ;
}

@mixin ag-Container-css($Display){
    .#{$Container}-#{$Display}{
        @include ag-Container($Display);
    }
}


